generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Appointments {
  id            String      @id @default(uuid()) @db.Uuid
  user_id       String?     @db.Uuid
  title         String
  notes         String?
  start_time    DateTime    @db.Timestamp(6)
  reminder_sent Boolean     @default(false)
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  users         Users?      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  reminders     Reminders[]
}

model Reminders {
  id             String        @id @default(uuid()) @db.Uuid
  appointment_id String?       @db.Uuid
  send_at        DateTime      @db.Timestamp(6)
  sent           Boolean       @default(false)
  appointments   Appointments? @relation(fields: [appointment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Users {
  id            String         @id @default(uuid()) @db.Uuid
  email         String         @unique
  phone         String?
  first_name    String
  last_name     String
  password_hash String
  created_at    DateTime       @default(now()) @db.Timestamp(6)
  updated_at    DateTime       @updatedAt @db.Timestamp(6)
  appointments  Appointments[]
  refresh_tokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  user_id   String   @db.Uuid
  expires_at DateTime
  created_at DateTime @default(now())
  is_revoked Boolean @default(false)

  user Users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([token])
  @@index([user_id])
}
